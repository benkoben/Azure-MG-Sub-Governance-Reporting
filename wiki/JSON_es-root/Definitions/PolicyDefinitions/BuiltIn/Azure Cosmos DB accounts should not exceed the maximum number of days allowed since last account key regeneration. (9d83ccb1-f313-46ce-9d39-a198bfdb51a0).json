{
  "displayName": "Azure Cosmos DB accounts should not exceed the maximum number of days allowed since last account key regeneration.",
  "policyType": "BuiltIn",
  "mode": "Indexed",
  "description": "Regenerate your keys in the specified time to keep your data more protected.",
  "metadata": {
    "version": "1.0.0",
    "category": "Cosmos DB"
  },
  "parameters": {
    "maxDaysSinceLastRegeneration": {
      "type": "String",
      "metadata": {
        "displayName": "Maximum number of days allowed since last account key regeneration.",
        "description": "Maximum number of days allowed since last account key regeneration."
      },
      "defaultValue": "60"
    },
    "effect": {
      "type": "String",
      "metadata": {
        "displayName": "Policy Effect",
        "description": "The desired effect of the policy."
      },
      "allowedValues": [
        "Audit",
        "Disabled"
      ],
      "defaultValue": "Audit"
    }
  },
  "policyRule": {
    "if": {
      "allOf": [
        {
          "field": "type",
          "equals": "Microsoft.DocumentDB/databaseAccounts"
        },
        {
          "anyOf": [
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.primaryMasterKey.generationTime",
              "exists": "false"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.secondaryMasterKey.generationTime",
              "exists": "false"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.primaryReadonlyMasterKey.generationTime",
              "exists": "false"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.secondaryReadonlyMasterKey.generationTime",
              "exists": "false"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.primaryMasterKey.generationTime",
              "lessOrEquals": "[addDays(utcNow(), mul(int(parameters('maxDaysSinceLastRegeneration')), -1))]"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.secondaryMasterKey.generationTime",
              "lessOrEquals": "[addDays(utcNow(), mul(int(parameters('maxDaysSinceLastRegeneration')), -1))]"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.primaryReadonlyMasterKey.generationTime",
              "lessOrEquals": "[addDays(utcNow(), mul(int(parameters('maxDaysSinceLastRegeneration')), -1))]"
            },
            {
              "field": "Microsoft.DocumentDB/databaseAccounts/keysMetadata.secondaryReadonlyMasterKey.generationTime",
              "lessOrEquals": "[addDays(utcNow(), mul(int(parameters('maxDaysSinceLastRegeneration')), -1))]"
            }
          ]
        }
      ]
    },
    "then": {
      "effect": "[parameters('effect')]"
    }
  }
}
